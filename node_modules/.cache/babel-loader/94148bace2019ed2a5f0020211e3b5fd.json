{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n}); //userId\n\nexport const getAuthUserData = () => dispatch => {\n  authAPI.getLogin().then(response => {\n    if (response.data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = response.data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  });\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["/home/smems/Документы/Dev/react-course/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","getLogin","then","response","data","resultCode","id","password","rememberMe","logout"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAQ,EACJ,GAAGO,KADC;AAEJ,WAAGC,MAAM,CAACE;AAFN,OAAR;;AAKJ;AACI,aAAOH,KAAP;AARR;AAUH,CAXD;;AAaA,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;AAACI,EAAAA,IAAI,EAAET,aAAP;AAAsBU,EAAAA,OAAO,EACvF;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB;AAD0D,CAAnC,CAAxB,C,CACmC;;AAC1C,OAAO,MAAMO,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/Cd,EAAAA,OAAO,CAACe,QAAR,GACKC,IADL,CACUC,QAAQ,IAAI;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChC,UAAI;AAACC,QAAAA,EAAD;AAAKhB,QAAAA,KAAL;AAAYC,QAAAA;AAAZ,UAAqBY,QAAQ,CAACC,IAAT,CAAcA,IAAvC;AACAJ,MAAAA,QAAQ,CAACF,eAAe,CAACQ,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,GAND;AAOH,CARM;AAUP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQiB,QAAR,EAAkBC,UAAlB,KAAkCR,QAAD,IAAc;AAChEd,EAAAA,OAAO,CAACK,KAAR,CAAcD,KAAd,EAAqBiB,QAArB,EAA+BC,UAA/B,EACKN,IADL,CACUC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChCL,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACH;AACJ,GALL;AAMH,CAPM;AASP,OAAO,MAAMU,MAAM,GAAG,MAAOT,QAAD,IAAc;AACtCd,EAAAA,OAAO,CAACuB,MAAR,GACKP,IADL,CACUC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChCL,MAAAA,QAAQ,CAACF,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAhB,CAAR;AACH;AACJ,GALL;AAMH,CAPM;AASP,eAAeL,WAAf","sourcesContent":["import {authAPI} from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return  {\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth} }) //userId\nexport const getAuthUserData = () => (dispatch) => {\n    authAPI.getLogin()\n        .then(response => {\n        if (response.data.resultCode === 0) {\n            let {id, email, login} = response.data.data;\n            dispatch(setAuthUserData(id, email, login, true));\n        }\n    });\n}\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n    authAPI.login(email, password, rememberMe)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(getAuthUserData())\n            }\n        });\n}\n\nexport const logout = () => (dispatch) => {\n    authAPI.logout()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n        });\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}