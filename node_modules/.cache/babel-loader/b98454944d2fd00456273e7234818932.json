{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/smems/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Dev/react-course/src/components/Dialogs/Dialogs.jsx\";\nimport React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\n\nconst Dialogs = props => {\n  let state = props.messagesPage;\n  let dialogsElements = state.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 52\n  }, this));\n  let messagesElements = state.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 54\n  }, this));\n  let newMessageBody = state.newMessageBody;\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddMessageFormRedux, {\n      onSubmit: addNewMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: Textarea,\n        validate: [required, maxLength50],\n        placeholder: \"Enter your message\",\n        name: \"newMessageBody\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = AddMessageForm;\nconst AddMessageFormRedux = reduxForm({\n  form: \"dialogAddMessageForm\"\n})(AddMessageForm);\nexport default Dialogs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"AddMessageForm\");","map":{"version":3,"sources":["/home/smems/Документы/Dev/react-course/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","Redirect","maxLengthCreator","required","Textarea","Dialogs","props","state","messagesPage","dialogsElements","dialogs","map","d","name","id","messagesElements","messages","m","message","newMessageBody","addNewMessage","values","sendMessage","isAuth","dialogsItems","maxLength50","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,mCAAzC;AACA,SAAQC,QAAR,QAAuB,uCAAvB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,YAAlB;AAEA,MAAIC,eAAe,GAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAoBC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAAqC,IAAA,EAAE,EAAED,CAAC,CAACE;AAA3C,KAA+BF,CAAC,CAACE,EAAjC;AAAA;AAAA;AAAA;AAAA,UAAzB,CAAtB;AACA,MAAIC,gBAAgB,GAAGR,KAAK,CAACS,QAAN,CAAeL,GAAf,CAAqBM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC;AAApB,KAAkCD,CAAC,CAACH,EAApC;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAvB;AACA,MAAIK,cAAc,GAAGZ,KAAK,CAACY,cAA3B;;AACA,MAAIC,aAAa,GAAIC,MAAD,IAAY;AAC5Bf,IAAAA,KAAK,CAACgB,WAAN,CAAkBD,MAAM,CAACF,cAAzB;AACH,GAFD;;AAIA,MAAI,CAACb,KAAK,CAACiB,MAAX,EAAmB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAEnB,sBACI;AAAK,IAAA,SAAS,EAAE3B,CAAC,CAACc,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEd,CAAC,CAAC4B,YAAlB;AAAA,gBACMf;AADN;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEb,CAAC,CAACoB,QAAlB;AAAA,6BACI;AAAA,kBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,mBAAD;AAAqB,MAAA,QAAQ,EAAEK;AAA/B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAzBD;;KAAMf,O;AA2BN,MAAMoB,WAAW,GAAGvB,gBAAgB,CAAC,EAAD,CAApC;;AACA,MAAMwB,cAAc,GAAIpB,KAAD,IAAW;AAC9B,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACqB,YAAtB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEvB,QAAlB;AACO,QAAA,QAAQ,EAAE,CAACD,QAAD,EAAWsB,WAAX,CADjB;AAEO,QAAA,WAAW,EAAC,oBAFnB;AAEwC,QAAA,IAAI,EAAC;AAF7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbD;;MAAMC,c;AAcN,MAAME,mBAAmB,GAAG5B,SAAS,CAAC;AAAC6B,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA2CH,cAA3C,CAA5B;AAGA,eAAerB,OAAf","sourcesContent":["import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Redirect} from \"react-router-dom\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\n\nconst Dialogs = (props) => {\n\n    let state = props.messagesPage;\n\n    let dialogsElements = state.dialogs.map ( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\n    let messagesElements = state.messages.map ( m => <Message message={m.message} key={m.id} />);\n    let newMessageBody = state.newMessageBody;\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={'/login'} />;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={s.messages}>\n                <div>{ messagesElements }</div>\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n\n    )\n}\n\nconst maxLength50 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       placeholder=\"Enter your message\" name=\"newMessageBody\" />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\n\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}